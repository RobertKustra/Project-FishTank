// <auto-generated />
using System;
using FishTank.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FishTank.Persistance.Migrations
{
    [DbContext(typeof(FishDbContext))]
    [Migration("20220609213640_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EatingsHabitFish", b =>
                {
                    b.Property<int>("EatingsHabitsId")
                        .HasColumnType("int");

                    b.Property<int>("FishId")
                        .HasColumnType("int");

                    b.HasKey("EatingsHabitsId", "FishId");

                    b.HasIndex("FishId");

                    b.ToTable("EatingsHabitFish");
                });

            modelBuilder.Entity("FishTank.Domain.Entities.EatingsHabit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EatingsHabits");
                });

            modelBuilder.Entity("FishTank.Domain.Entities.Fish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Inactivated")
                        .HasColumnType("datetime2");

                    b.Property<string>("InactivatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LivingEnvironmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LivingEnvironmentId");

                    b.ToTable("Fish");
                });

            modelBuilder.Entity("FishTank.Domain.Entities.LivingEnvironment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaterType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LivingEnvironments");
                });

            modelBuilder.Entity("EatingsHabitFish", b =>
                {
                    b.HasOne("FishTank.Domain.Entities.EatingsHabit", null)
                        .WithMany()
                        .HasForeignKey("EatingsHabitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FishTank.Domain.Entities.Fish", null)
                        .WithMany()
                        .HasForeignKey("FishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FishTank.Domain.Entities.Fish", b =>
                {
                    b.HasOne("FishTank.Domain.Entities.LivingEnvironment", "LivingEnvironment")
                        .WithMany("Fish")
                        .HasForeignKey("LivingEnvironmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("FishTank.Domain.ValueObjects.FishName", "FishName", b1 =>
                        {
                            b1.Property<int>("FishId")
                                .HasColumnType("int");

                            b1.Property<string>("LatinName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FishId");

                            b1.ToTable("Fish");

                            b1.WithOwner()
                                .HasForeignKey("FishId");
                        });

                    b.Navigation("FishName")
                        .IsRequired();

                    b.Navigation("LivingEnvironment");
                });

            modelBuilder.Entity("FishTank.Domain.Entities.LivingEnvironment", b =>
                {
                    b.Navigation("Fish");
                });
#pragma warning restore 612, 618
        }
    }
}
