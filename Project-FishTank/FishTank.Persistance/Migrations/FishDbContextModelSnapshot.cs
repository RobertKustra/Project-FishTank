// <auto-generated />
using System;
using FishTank.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FishTank.Persistance.Migrations
{
    [DbContext(typeof(FishDbContext))]
    partial class FishDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EatingsHabitsFish", b =>
                {
                    b.Property<int>("EatingsHabitsId")
                        .HasColumnType("int");

                    b.Property<int>("FishId")
                        .HasColumnType("int");

                    b.HasKey("EatingsHabitsId", "FishId");

                    b.HasIndex("FishId");

                    b.ToTable("EatingsHabitsFish");
                });

            modelBuilder.Entity("FishTank.Domain.Entities.EatingsHabits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("EatingsHabits");
                });

            modelBuilder.Entity("FishTank.Domain.Entities.Fish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Inactivated")
                        .HasColumnType("datetime2");

                    b.Property<string>("InactivatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LivingEnvironmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LivingEnvironmentId");

                    b.ToTable("Fish");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 6, 12, 14, 35, 34, 515, DateTimeKind.Local).AddTicks(7196),
                            CreatedBy = "Auto Generate",
                            LivingEnvironmentId = 1,
                            StatusId = 1
                        });
                });

            modelBuilder.Entity("FishTank.Domain.Entities.LivingEnvironments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WaterType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("LivingEnvironments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Malawi Lake",
                            WaterType = "Fresh Water"
                        });
                });

            modelBuilder.Entity("EatingsHabitsFish", b =>
                {
                    b.HasOne("FishTank.Domain.Entities.EatingsHabits", null)
                        .WithMany()
                        .HasForeignKey("EatingsHabitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FishTank.Domain.Entities.Fish", null)
                        .WithMany()
                        .HasForeignKey("FishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FishTank.Domain.Entities.Fish", b =>
                {
                    b.HasOne("FishTank.Domain.Entities.LivingEnvironments", "LivingEnvironment")
                        .WithMany("Fish")
                        .HasForeignKey("LivingEnvironmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("FishTank.Domain.ValueObjects.FishName", "FishName", b1 =>
                        {
                            b1.Property<int>("FishId")
                                .HasColumnType("int");

                            b1.Property<string>("LatinName")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("LatinName");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("Name");

                            b1.HasKey("FishId");

                            b1.ToTable("Fish");

                            b1.WithOwner()
                                .HasForeignKey("FishId");

                            b1.HasData(
                                new
                                {
                                    FishId = 1,
                                    LatinName = "Pseudotorpheus",
                                    Name = "Yellow"
                                });
                        });

                    b.Navigation("FishName")
                        .IsRequired();

                    b.Navigation("LivingEnvironment");
                });

            modelBuilder.Entity("FishTank.Domain.Entities.LivingEnvironments", b =>
                {
                    b.Navigation("Fish");
                });
#pragma warning restore 612, 618
        }
    }
}
